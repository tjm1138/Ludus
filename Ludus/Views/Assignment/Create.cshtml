@* Assignment Create View
Shawn Williams
March 31, 2013*@

@model Ludus.Models.Assignment

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@* Create form to create a assignment *@
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Assignment</legend>

        @* Form contains labels, populated data, and validates required fields *@
        <div class="editor-label">
            @Html.LabelFor(model => model.SectionId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SectionId)
            @Html.ValidationMessageFor(model => model.SectionId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Notes)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Notes)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Due)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Due)
            @Html.ValidationMessageFor(model => model.Due)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.SubmissionLimit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SubmissionLimit)
            @Html.ValidationMessageFor(model => model.SubmissionLimit)
        </div>        
        <div class="editor-label">
            @Html.LabelFor(model => model.MaximumGrade)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MaximumGrade)
            @Html.ValidationMessageFor(model => model.MaximumGrade)
        </div>        
        <div class="editor-label">
            @Html.LabelFor(model => model.Active)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Active)
        </div>
        <br />
        <p>
            @* Submit button *@
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
