@model Ludus.Models.Calendar
@Html.ActionLink("Create New Personal Item", "Create", "PersonalItem", null, new { @class = "btn btn-info", @style = "color:white" })
<div class="navbar">
    <div class="navbar-inner">
        <ul class="nav dropdown">
            <li>@Html.ActionLink(String.Format ("< {0:MMMM yyyy}", Model.DisplayMonth.AddMonths(-1)), "PreviousMonth")</li>
        </ul>
        <span class="brand">@String.Format("{0:MMMM yyyy}", Model.DisplayMonth)</span>
        <ul class="nav dropdown">
           <li>@Html.ActionLink(String.Format ("{0:MMMM yyyy} >", Model.DisplayMonth.AddMonths(1)), "NextMonth")</li>
        </ul>
    </div>
</div>
<div class="calendar_grid">
    <div class="month_header row-fluid">
        <div class="calcel month first">Sunday</div>
        <div class="calcel month">Monday</div>
        <div class="calcel month">Tuesday</div>
        <div class="calcel month">Wednesday</div>
        <div class="calcel month">Thursday</div>
        <div class="calcel month">Friday</div>
        <div class="calcel month">Saturday</div>
    </div>
    @{
        DateTime first = Model.DisplayMonth.AddDays(-1 * (int)Model.DisplayMonth.DayOfWeek);
        for (int week = 0; week < 6; ++week)
        {
        <div class="row-fluid week">
            @for (int day = 0; day < 7; ++day)
            {
                DateTime thisDay = first.AddDays(week * 7 + day);
                <div class="calcel">
                    <div>
                        @{string dayClass = thisDay == DateTime.Today ? "btn btn-inverse" : "btn";
                          string buttonText = @thisDay.Day.ToString() + (thisDay == DateTime.Today ? " (Today)" : "");
                          }
                        <div class="pull-left"><a class="@dayClass" >@buttonText</a></div>
                        <div class="clearfix"></div>
                    </div>
                    @{
                        foreach (var item in (from i in Model.Items
                                    where i.Due >= thisDay && i.Due < thisDay.AddDays(1) select i))
                                    {
                            if (item is Ludus.Models.PersonalItem)
                            {
                                @Html.ActionLink(@item.Description, "Details", "PersonalItem", new { id = item.Id, goHome = true }, new { @class = "btn btn-info event", style = "color:white" })
                            }
                            else
                            {
                                @Html.ActionLink(@item.Description, "Edit", "Assignment", new { id = item.Id, goHome = true }, new { @class = "btn btn-success event", style = "color:white" })
                            }
                                    }
                                    }
                </div>
            }
        </div>
        if (first.AddDays(((week + 1) * 7) + 1).Month > Model.DisplayMonth.Month)
          {
              break;
          }
        }
    }
</div>
